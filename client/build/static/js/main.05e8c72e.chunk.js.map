{"version":3,"sources":["pages/Start.jsx","components/Navigation.jsx","pages/ISIMenu.jsx","pages/ISIManagement/ISIManage.jsx","pages/ISIManagement/ISIReceive.jsx","pages/ISIManagement/ISIReport.jsx","pages/ISIManagement/ISISignOut.jsx","App.js","reportWebVitals.js","index.js"],"names":["Start","useEffect","document","title","history","useHistory","id","CardDeck","Card","onClick","push","className","style","width","Body","Title","Text","Navigation","props","proceed","Navbar","bg","Button","variant","from","to","label","ISIMenu","cursor","new_book_data","game_id","ticket_value","ticket_name","book_value","current_game","ISIManage","useState","rowData","setRowData","addIsLoading","setAddIsLoading","rowIndexToUse","setRowIndexToUse","showAddDialog","setShowAddDialog","showDelDialog","setShowDelDialog","gridApi","useRef","closeAddDialog","openAddDialog","closeDelDialog","frameworkComponents","cellControlButtons","size","data","current","getDisplayedRowAtIndex","node","rowIndex","fetchData","axios","get","then","res","rows","map","book","books","hideOverlay","numberValidator","event","val","exec","target","value","name","GameData","Modal","show","onHide","backdrop","keyboard","Header","InputGroup","Prepend","FormControl","type","onChange","placeholder","defaultValue","Append","Checkbox","defaultChecked","checked","toggleCurrentGame","Footer","showLoadingOverlay","toUpperCase","post","domLayout","columnDefs","headerName","field","cellStyle","suppressMovable","floatingFilter","filter","colId","cellRenderer","params","defaultColDef","sortable","gridOptions","suppressNoRowsOverlay","animateRows","onGridReady","api","sizeColumnsToFit","bookToAdd","missingBook","shipmentBooks","shipmentData","shipment_id","date_received","ISIReceive","showShipmentIdDialog","setShowShipmentIdDialog","showExistsDialog","setShowExistsDialog","showNotExistsDialog","setShowNotExistsDialog","Date","selectedDate","setSelectedDate","closeShipmentIdDialog","closeExistsDialog","closeNotExistsDialog","valueFormatter","replace","bookNumber","book_number","item","console","log","gridSetter","game","games","catch","err","response","err_type","selected","dateFormat","date","getFullYear","getMonth","getDate","onKeyUp","key","setHeaderHeight","ISIReport","ISISignOut","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.05e8c72e.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport {useHistory} from 'react-router-dom'\nimport { Card, CardDeck } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/style.css';\n\nexport default function Start() {\n    useEffect(() => {\n        document.title = 'Home - Mona';\n    }, []);\n\n    let history = useHistory();\n\n    return (\n        <div id='card-deck-set'>\n            {/* <CardDeck>\n                    <Card as='a' href='/eodform' className='card-list' style={{ width: '18rem' }}>\n                        <Card.Body>\n                            <Card.Title>End of Day Form</Card.Title>\n                            <Card.Text>\n                                Complete the End of Day report.\n                        </Card.Text>\n                        </Card.Body>\n                    </Card>\n\n                    <Card as='a' href='' className='card-list' style={{ width: '18rem' }}>\n                        <Card.Body>\n                            <Card.Title>Access Previous EOD</Card.Title>\n                            <Card.Text>\n                                This is not yet a working function, please do not try to use it!\n                        </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </CardDeck>\n\n                <br /> */}\n\n            <CardDeck>\n                <Card onClick={() => {history.push('/isimenu')}} className='card-list' style={{ width: '18rem' }}>\n                    <Card.Body>\n                        <Card.Title>ISI Management</Card.Title>\n                        <Card.Text>\n                            Manage the ISI stock.\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </CardDeck>\n\n\n        </div>\n    );\n}","import React from 'react';\nimport { useHistory } from 'react-router-dom'\nimport { Navbar, Button } from 'react-bootstrap';\n\nexport default function Navigation(props) {\n\n    let history = useHistory();\n\n    if (props.proceed === 'true') {\n        return (\n            <Navbar bg='danger' className='justify-content-between'>\n                <Button variant='dark' onClick={() => { history.push(props.from) }}>Back</Button>\n                <Button variant='success' onClick={() => { history.push(props.to) }}>{props.label}</Button>\n            </Navbar>\n        )\n    } else if (props.proceed === 'false') {\n        return (\n            <Navbar bg='danger' className='justify-content-between'>\n                <Button variant='dark' onClick={() => { history.push(props.from) }}>Back</Button>\n            </Navbar>\n        )\n    }\n}","import React, { useEffect } from \"react\";\nimport { Card, CardDeck } from \"react-bootstrap\";\nimport { useHistory } from 'react-router-dom'\n\nimport Navigation from '../components/Navigation'\n\nimport '../styles/style.css';\n\nexport default function ISIMenu() {\n    useEffect(() => {\n        document.title = 'ISI Management - Mona';\n    }, []);\n\n    let history = useHistory()\n    \n    return (\n        <div>\n            <Navigation proceed='false' from='/' />\n            <div id='card-deck-set'>\n                <CardDeck>\n                    <Card onClick={() => {history.push('/isireceive')}} className='card-list' style={{ width: '18rem', cursor: \"pointer\" }}>\n                        <Card.Body>\n                            <Card.Title>Receive</Card.Title>\n                            <Card.Text>\n                                Receive shipments of ISI books.\n                                </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </CardDeck>\n                <br />\n\n                <CardDeck>\n                    <Card onClick={() => {history.push('isisignout')}} className='card-list' style={{ width: '18rem', cursor: \"pointer\" }}>\n                        <Card.Body>\n                            <Card.Title>Sign Out</Card.Title>\n                            <Card.Text>\n                                Sign ISI books out of the safe\n                                </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </CardDeck>\n                <br />\n\n                <CardDeck>\n                    <Card onClick={() => {history.push('isireport')}} className='card-list' style={{ width: '18rem', cursor: \"pointer\" }}>\n                        <Card.Body>\n                            <Card.Title>Reports</Card.Title>\n                            <Card.Text>\n                                Generate and view various ISI reports\n                                </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </CardDeck>\n                <br />\n\n                <CardDeck>\n                    <Card onClick={() => {history.push('isimanage')}} className='card-list' style={{ width: '18rem', cursor: \"pointer\" }}>\n                        <Card.Body>\n                            <Card.Title>Manage</Card.Title>\n                            <Card.Text>\n                                Manage ISI book types\n                                </Card.Text>\n                        </Card.Body>\n                    </Card>\n\n                </CardDeck>\n            </div>\n        </div>\n    )\n}","import React, { useEffect, useState, useRef } from \"react\";\nimport { Button, Modal, InputGroup, FormControl } from 'react-bootstrap'\nimport { AgGridReact } from 'ag-grid-react';\nimport axios from 'axios'\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nimport Navigation from '../../components/Navigation'\n\nlet new_book_data = {\n    game_id: '',\n    ticket_value: '',\n    ticket_name: '',\n    book_value: '',\n    current_game: true,\n}\n\nexport default function ISIManage() {\n    const [rowData, setRowData] = useState([]);\n    const [addIsLoading, setAddIsLoading] = useState(true);\n    const [rowIndexToUse, setRowIndexToUse] = useState(null);\n    const [showAddDialog, setShowAddDialog] = useState(false);\n    const [showDelDialog, setShowDelDialog] = useState(false);\n\n    const gridApi = useRef()\n\n    const closeAddDialog = () => setShowAddDialog(false);\n    const openAddDialog = () => setShowAddDialog(true);\n\n    const closeDelDialog = () => setShowDelDialog(false);\n    const openDelDialog = () => setShowDelDialog(true);\n\n    const onGridReady = (params) => {\n        gridApi.current = params.api\n        gridApi.current.sizeColumnsToFit();\n\n    };\n\n    const columnDefs = [\n        {\n            headerName: \"Game Number\",\n            field: \"game_id\",\n            cellStyle: { 'text-align': 'center' },\n            suppressMovable: true,\n            floatingFilter: true,\n            filter: true,\n        },\n        {\n            headerName: \"Ticket Value\",\n            field: \"ticket_value\",\n            cellStyle: { 'text-align': 'center' },\n            suppressMovable: true,\n        },\n        {\n            headerName: \"Ticket Name\",\n            field: \"ticket_name\",\n            cellStyle: { 'text-align': 'center' },\n            suppressMovable: true,\n            floatingFilter: true,\n            filter: true,\n        },\n        {\n            headerName: \"Book Value\",\n            field: \"book_value\",\n            cellStyle: { 'text-align': 'center' },\n            suppressMovable: true,\n        },\n        {\n            headerName: \"Current Game?\",\n            field: \"current_game\",\n            colId: 'params',\n            cellRenderer: params => {\n                return `<input type='checkbox' disabled ${params.value ? 'checked' : ''} />`;\n            },\n            cellStyle: { 'text-align': 'center' },\n            suppressMovable: true,\n        },\n        {\n            headerName: \"\",\n            field: \"button_field\",\n            cellRenderer: 'cellControlButtons',\n            cellStyle: { 'text-align': 'right' },\n            suppressMovable: true,\n        }\n    ];\n\n    const frameworkComponents = {\n        cellControlButtons: cellControlButtons,\n    }\n\n    useEffect(() => {\n        document.title = 'Manage ISI Types - Mona';\n        fetchData()\n    }, []);\n\n    // Get data from the API and set it\n    function fetchData() {\n        axios.get('/api/isi-game-types-download')\n            .then((res) => (res.data.rows))\n            .then((rows) =>\n                rows.map((book) => {\n                    return {\n                        game_id: book.game_id,\n                        ticket_value: book.ticket_value,\n                        ticket_name: book.ticket_name,\n                        book_value: book.book_value,\n                        current_game: book.current_game,\n                    };\n                })\n            )\n            .then((books) => setRowData(books))\n            .then(() => gridApi.current.hideOverlay())\n            .then(() => setAddIsLoading(false));\n    }\n\n    // Render the edit and delete buttons in each cell\n    function cellControlButtons(props) {\n        return (\n            <span>\n                <Button variant='outline-secondary' size='sm' onClick={() => {\n                    let data = gridApi.current.getDisplayedRowAtIndex(props.node.rowIndex).data\n                    new_book_data['game_id'] = data.game_id\n                    new_book_data['ticket_value'] = data.ticket_value\n                    new_book_data['book_value'] = data.book_value\n                    new_book_data['ticket_name'] = data.ticket_name\n                    new_book_data['current_game'] = data.current_game\n                    openAddDialog()\n                }}>Edit</Button>{' '}\n\n                <Button variant='outline-secondary' size='sm' onClick={() => {\n                    setRowIndexToUse(props.node.rowIndex)\n                    openDelDialog()\n                }}\n                >Delete</Button>\n            </span>\n        );\n    }\n\n    function gameDelete() {\n        closeDelDialog();\n        setAddIsLoading(true);\n        gridApi.current.showLoadingOverlay();\n        axios.get('/api/isi-game-delete/' + gridApi.current.getDisplayedRowAtIndex(rowIndexToUse).data.game_id)\n            .then(() => fetchData())\n            .then(() => setRowIndexToUse(null))\n    }\n\n    function gameAdd() {\n        closeAddDialog();\n        setAddIsLoading(true);\n        gridApi.current.showLoadingOverlay();\n        new_book_data['ticket_name'] = new_book_data['ticket_name'].toUpperCase();\n        axios.post('/api/isi-game-types-upload', new_book_data)\n            .then(() => fetchData())\n            .then(new_book_data = {\n                game_id: '',\n                ticket_value: '',\n                ticket_name: '',\n                book_value: '',\n                current_game: true,\n            });\n    }\n\n    function numberValidator(event) {\n        let re = /^[0-9]*$/;\n        let val = re.exec(event.target.value);\n\n        if (val !== null) {\n            event.target.value = val[0]\n            new_book_data[event.target.name] = event.target.value\n        } else {\n            event.target.value = new_book_data[event.target.name]\n        }\n    }\n\n    function valueUpdater(event) {\n        new_book_data[event.target.name] = event.target.value;\n    }\n\n    function toggleCurrentGame(event) {\n        new_book_data['current_game'] = event.target.checked\n    }\n\n    const GameData = () => {\n        if (rowIndexToUse !== null) {\n            return (\n                <span><i>\n                    {gridApi.current.getDisplayedRowAtIndex(rowIndexToUse).data.ticket_value}{' '}\n                    {gridApi.current.getDisplayedRowAtIndex(rowIndexToUse).data.ticket_name}{' '}\n                    ({gridApi.current.getDisplayedRowAtIndex(rowIndexToUse).data.game_id})\n                </i></span>\n            )\n        } else {\n            return (\n                <span>UNKOWN</span>\n            )\n        }\n    }\n\n    return (\n        <div>\n            <Navigation proceed='false' from='/isimenu' />\n            <div className='add-isi-button'>\n                <Button variant=\"outline-danger\" onClick={!addIsLoading ? openAddDialog : null}>{addIsLoading ? 'Loading...' : 'Add ISI Game'}</Button>\n            </div>\n\n            {/* Modal for adding ISI books */}\n            <Modal\n                show={showAddDialog}\n                onHide={closeAddDialog}\n                backdrop=\"static\"\n                keyboard={false}\n            >\n                <Modal.Header>\n                    <Modal.Title>ISI Game Details</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <InputGroup className='mb-3'>\n                        <InputGroup.Prepend>\n                            <InputGroup.Text>Game Number</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl\n                            type='text'\n                            onChange={numberValidator}\n                            name='game_id'\n                            placeholder={new_book_data.game_id}\n                        />\n                    </InputGroup>\n\n                    <InputGroup className='mb-3'>\n                        <InputGroup.Prepend>\n                            <InputGroup.Text>Ticket Value</InputGroup.Text>\n                            <InputGroup.Text>$</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl\n                            type='text'\n                            onChange={numberValidator}\n                            name='ticket_value'\n                            defaultValue={new_book_data.ticket_value}\n                        />\n                    </InputGroup>\n\n                    <InputGroup className='mb-3'>\n                        <InputGroup.Prepend>\n                            <InputGroup.Text>Book Value</InputGroup.Text>\n                            <InputGroup.Text>$</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl\n                            type='text'\n                            onChange={numberValidator}\n                            name='book_value'\n                            defaultValue={new_book_data.book_value}\n                        />\n                    </InputGroup>\n\n                    <InputGroup className='mb-3'>\n                        <InputGroup.Prepend>\n                            <InputGroup.Text>Ticket Name</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl\n                            type='text'\n                            onChange={valueUpdater}\n                            name='ticket_name'\n                            defaultValue={new_book_data.ticket_name}\n                        />\n                    </InputGroup>\n\n                    <InputGroup className='mb-3'>\n                        <InputGroup.Prepend>\n                            <InputGroup.Text>Current Game?</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <InputGroup.Append>\n                            <InputGroup.Checkbox defaultChecked={new_book_data.current_game} onChange={(event) => toggleCurrentGame(event)}></InputGroup.Checkbox>\n                        </InputGroup.Append>\n\n                    </InputGroup>\n\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => {\n                        new_book_data = {\n                            game_id: '',\n                            ticket_value: '',\n                            ticket_name: '',\n                            book_value: '',\n                            current_game: true,\n                        }\n                        closeAddDialog()\n                    }}>Close</Button>\n                    <Button variant=\"success\" onClick={gameAdd}>Save</Button>\n                </Modal.Footer>\n            </Modal>\n\n            {/* Modal for deleting ISI books */}\n            <Modal\n                show={showDelDialog}\n                onHide={closeDelDialog}\n                backdrop=\"static\"\n                keyboard={false}\n            >\n                <Modal.Header>\n                    <Modal.Title>Delete Game?</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    Are you sure you want to delete the <GameData /> game?\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={closeDelDialog}>Cancel</Button>\n                    <Button variant=\"danger\" onClick={gameDelete}>Delete</Button>\n                </Modal.Footer>\n            </Modal>\n\n            <div\n                className=\"ag-theme-alpine\"\n                style={{\n                    width: \"100%\",\n                }}\n            >\n                <AgGridReact\n                    domLayout={\"autoHeight\"}\n                    columnDefs={columnDefs}\n                    defaultColDef={{\n                        sortable: true,\n                    }}\n                    gridOptions={{\n                        suppressNoRowsOverlay: true,\n                    }}\n                    rowData={rowData}\n                    animateRows={true}\n                    onGridReady={onGridReady}\n                    frameworkComponents={frameworkComponents}\n                ></AgGridReact>\n            </div>\n        </div>\n    )\n}","import React, { useEffect, useState, useRef } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { Modal, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { AgGridReact } from 'ag-grid-react';\nimport axios from 'axios'\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport Navigation from '../../components/Navigation'\n\nlet bookToAdd = '';\nlet missingBook = ''\nlet shipmentBooks = [];\nlet shipmentData = {\n    shipment_id: '',\n    date_received: '',\n};\n\nexport default function ISIReceive() {\n    let history = useHistory()\n\n    // CHANGE ME BACK TO TRUE FOR ACTUAL PRODUCTION\n    const [showShipmentIdDialog, setShowShipmentIdDialog] = useState(false);\n    const [showExistsDialog, setShowExistsDialog] = useState(false);\n    const [showNotExistsDialog, setShowNotExistsDialog] = useState(false);\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [addIsLoading, setAddIsLoading] = useState(false);\n    const [rowData, setRowData] = useState([]);\n\n    const gridApi = useRef();\n\n    const closeShipmentIdDialog = () => setShowShipmentIdDialog(false);\n    const openShipmentIdDialog = () => setShowShipmentIdDialog(true);\n    const closeExistsDialog = () => setShowExistsDialog(false);\n    const openExistsDialog = () => setShowExistsDialog(true);\n    const closeNotExistsDialog = () => setShowNotExistsDialog(false);\n    const openNotExistsDialog = () => setShowNotExistsDialog(true);\n\n    useEffect(() => {\n        document.title = 'Receive ISI - Mona';\n    }, []);\n\n    const onGridReady = (params) => {\n        gridApi.current = params.api\n        gridApi.current.sizeColumnsToFit();\n        gridApi.current.setHeaderHeight(0);\n    };\n\n    const columnDefs = [\n        {\n            headerName: \"Book Number\",\n            field: \"book_number\",\n            valueFormatter: bookNumberFormatter,\n        },\n        {\n            headerName: \"Ticket Value\",\n            field: \"ticket_value\",\n        },\n        {\n            headerName: \"Ticket Name\",\n            field: \"ticket_name\",\n        },\n        {\n            headerName: \"\",\n            field: \"button_field\",\n            cellRenderer: 'cellControlButtons',\n            cellStyle: {'text-align': 'right'}\n        }\n    ];\n\n    const frameworkComponents = {\n        cellControlButtons: cellControlButtons,\n    };\n\n    function cellControlButtons(props) {\n        return (\n            <span>\n                <Button variant='outline-secondary' size='sm' onClick={() => {\n                    let bookNumber = gridApi.current.getDisplayedRowAtIndex(props.node.rowIndex).data.book_number;\n                    shipmentBooks = shipmentBooks.filter((item) => {\n                        return item.book_number !== bookNumber\n                    })\n                    console.log(shipmentBooks)\n                    gridApi.current.setRowData(shipmentBooks);\n                }}\n                >Remove</Button>\n            </span>\n        );\n    }\n\n    function bookNumberFormatter(params) {\n        return params.value.replace(/(\\d{4})(\\d{6})(\\d{3})(\\d{1})/, \"$1-$2-$3•$4\")\n    }\n\n    function shipmentAdd() {\n        setAddIsLoading(true);\n        shipmentData['date_received'] = selectedDate.getFullYear() + '-' + (selectedDate.getMonth() + 1) + '-' + selectedDate.getDate();\n        axios.post('/api/shipment-details-upload', shipmentData)\n            .then(() => setShowShipmentIdDialog(false))\n            .then(() => setAddIsLoading(false))\n            .then(shipmentData.shipment_id = '')\n            .catch((err) => {\n                if (err.response.data.err_type === 'already_exists') {\n                    closeShipmentIdDialog()\n                    openExistsDialog()\n                }\n            })\n    }\n\n    // Ensure that only numbers are entered in corresponding input boxes\n    function numberValidator(event) {\n        let re = /^[0-9]*$/;\n        let val = re.exec(event.target.value);\n\n        if (val !== null) {\n            event.target.value = val[0]\n            shipmentData[event.target.name] = event.target.value\n        } else {\n            event.target.value = shipmentData[event.target.name]\n        }\n    }\n\n    function gridSetter(bookNumber) {\n        let re = /^[0-9]{4}/;\n        let val = re.exec(bookNumber);\n\n        if (val !== null) {\n            axios.get('/api/isi-game-details/' + val[0])\n                .then((res) => (res.data.rows))\n                .then((rows) =>\n                    rows.map((game) => {\n                        return {\n                            ticket_value: game.ticket_value,\n                            ticket_name: game.ticket_name,\n                        };\n                    })\n                )\n                .then((games) => {\n                    shipmentBooks.push({ book_number: bookNumber, ticket_name: games[0].ticket_name, ticket_value: games[0].ticket_value });\n                    gridApi.current.setRowData(shipmentBooks);\n                })\n                .catch((err) => {\n                    if (err.response.data.err_type === 'not_exists') {\n                        missingBook = val[0];\n                        openNotExistsDialog();\n                    }\n                })\n        }\n    }\n\n    return (\n        <div>\n            <Navigation proceed='true' from='/isimenu' label='Receive Shipment' />\n\n            {/* Modal for adding isi shipment */}\n            <Modal\n                show={showShipmentIdDialog}\n                onHide={closeShipmentIdDialog}\n                backdrop=\"static\"\n                keyboard={false}\n            >\n                <Modal.Header>\n                    <Modal.Title>Enter Shipment Details</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <InputGroup className='mb-3'>\n                        <InputGroup.Prepend>\n                            <InputGroup.Text>Received Date</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <DatePicker\n                            className='form-control'\n                            selected={selectedDate}\n                            dateFormat='dd/MM/yyyy'\n                            onChange={(date) => (setSelectedDate(date))}\n                        />\n                    </InputGroup>\n\n                    <InputGroup className='mb-3'>\n                        <InputGroup.Prepend>\n                            <InputGroup.Text>Shipment ID</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl\n                            type='text'\n                            onChange={numberValidator}\n                            name='shipment_id'\n                            defaultValue={shipmentData.shipment_id}\n                        />\n                    </InputGroup>\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => {\n                        shipmentData.shipment_id = ''\n                        history.push('/isimenu')\n                    }}>Cancel</Button>\n                    <Button variant=\"danger\" onClick={!addIsLoading ? shipmentAdd : null}>{addIsLoading ? 'Adding...' : 'Add Shipment'}</Button>\n                </Modal.Footer>\n            </Modal>\n\n            {/* Modal for shipment that already exists */}\n            <Modal\n                show={showExistsDialog}\n                onHide={closeExistsDialog}\n                backdrop=\"static\"\n                keyboard={false}\n            >\n                <Modal.Body>\n                    Shipment <i>{shipmentData.shipment_id}</i> has already been added. Would you like to edit this shipment instead?\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => {\n                        closeExistsDialog();\n                        openShipmentIdDialog();\n                        setAddIsLoading(false);\n                    }}>Cancel</Button>\n                    <Button variant=\"danger\" onClick={closeExistsDialog}>Edit</Button>\n                </Modal.Footer>\n            </Modal>\n\n            {/* Modal for game that does not exist */}\n            <Modal\n                show={showNotExistsDialog}\n                onHide={closeNotExistsDialog}\n                backdrop=\"static\"\n                keyboard={false}\n            >\n                <Modal.Body>\n                    Game number <i>{missingBook}</i> does not exist. Please add it into the system through the <b>Manage</b> page.\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={closeNotExistsDialog}>Okay</Button>\n                </Modal.Footer>\n            </Modal>\n\n            <div className='enter-isi-book'>\n                <InputGroup className='mb-3'>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>Scan / Enter ISI Book Number</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                        type='text'\n                        onKeyUp={(event) => {\n                            bookToAdd = event.target.value\n                            if (event.key === 'Enter') {\n                                gridSetter(bookToAdd)\n                                event.target.value = ''\n                            }\n                        }}\n                    />\n                    <InputGroup.Append>\n                        <Button onClick={() => {\n                            gridSetter(bookToAdd)\n                        }} variant=\"outline-success\">Add</Button>\n                    </InputGroup.Append>\n                </InputGroup>\n            </div>\n\n            <div\n                className=\"ag-theme-alpine\"\n                style={{\n                    width: \"100%\",\n                }}\n            >\n                <AgGridReact\n                    domLayout={\"autoHeight\"}\n                    columnDefs={columnDefs}\n                    rowData={rowData}\n                    animateRows={true}\n                    onGridReady={onGridReady}\n                    gridOptions={{\n                        suppressNoRowsOverlay: true,\n                    }}\n                    frameworkComponents={frameworkComponents}\n                ></AgGridReact>\n            </div>\n        </div>\n    )\n}","import React, { useEffect } from \"react\";\n\nimport Navigation from '../../components/Navigation'\n\nexport default function ISIReport() {\n    useEffect(() => {\n        document.title = 'ISI Reports - Mona';\n    }, []);\n\n    return (\n        <div>\n            <Navigation proceed='false' from='/isimenu' />\n        </div>\n    )\n}","import React, { useEffect } from \"react\";\n\nimport Navigation from '../../components/Navigation'\n\nexport default function ISISignOut() {\n    useEffect(() => {\n        document.title = 'Sign Out ISI - Mona';\n    }, []);\n\n    return (\n        <div>\n            <Navigation proceed='false' from='/isimenu' />\n        </div>\n    )\n}","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Start from './pages/Start';\n// import EODForm from './pages/EODForm';\n// import ReportView from './pages/ReportView';\nimport ISIMenu from './pages/ISIMenu'\nimport ISIManage from './pages/ISIManagement/ISIManage'\nimport ISIReceive from './pages/ISIManagement/ISIReceive'\nimport ISIReport from './pages/ISIManagement/ISIReport'\nimport ISISignOut from './pages/ISIManagement/ISISignOut'\n\nexport default function App() {\n\n    return (\n        <Router>\n            <div className=\"App\">\n                <Switch>\n                    {/* Route for Start page */}\n                    <Route exact path='/'>\n                        <Start />\n                    </Route>\n\n                    {/* Route for the EOD Form page */}\n                    {/* <Route exact path='/eodform'>\n                        <EODForm />\n                    </Route> */}\n\n                    {/* Route for the EOD Report Page page */}\n                    {/* <Route exact path='/reportview'>\n                        <ReportView />\n                    </Route> */}\n\n                    {/* Route for the ISI Management page */}\n                    <Route exact path='/isimenu'>\n                        <ISIMenu />\n                    </Route>\n\n                    {/* Route for the ISI Manage page */}\n                    <Route exact path='/isimanage'>\n                        <ISIManage />\n                    </Route>\n\n                    {/* Route for the ISI Receive page */}\n                    <Route exact path='/isireceive'>\n                        <ISIReceive />\n                    </Route>\n\n                    {/* Route for the ISI Report page */}\n                    <Route exact path='/isireport'>\n                        <ISIReport />\n                    </Route>\n\n                    {/* Route for the ISI Sign Out page */}\n                    <Route exact path='/isisignout'>\n                        <ISISignOut />\n                    </Route>\n\n\n                </Switch>\n            </div>\n        </Router>\n    )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}