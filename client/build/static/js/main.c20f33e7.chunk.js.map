{"version":3,"sources":["pages/Start.jsx","components/Navigation.jsx","pages/ISIMenu.jsx","pages/ISIManagement/ISIManage.jsx","pages/ISIManagement/ISIReceive.jsx","pages/ISIManagement/ISIReport.jsx","pages/ISIManagement/ISISignOut.jsx","App.js","reportWebVitals.js","index.js"],"names":["Start","useEffect","document","title","history","useHistory","id","CardDeck","Card","onClick","push","className","style","width","Body","Title","Text","Navigation","props","proceed","Navbar","bg","Button","variant","from","to","ISIMenu","cursor","new_book_data","game_id","ticket_value","ticket_name","book_value","current_game","ISIManage","useState","rowData","setRowData","addIsLoading","setAddIsLoading","rowIndexToUse","setRowIndexToUse","showAddDialog","setShowAddDialog","showDelDialog","setShowDelDialog","gridApi","useRef","closeAddDialog","openAddDialog","closeDelDialog","frameworkComponents","cellControlButtons","size","data","current","getDisplayedRowAtIndex","node","rowIndex","fetchData","axios","get","then","res","rows","map","book","books","hideOverlay","numberValidator","event","val","exec","target","value","name","GameData","class","Modal","show","onHide","backdrop","keyboard","Header","InputGroup","Prepend","FormControl","type","onChange","placeholder","defaultValue","Append","Checkbox","defaultChecked","checked","toggleCurrentGame","Footer","showLoadingOverlay","post","domLayout","columnDefs","headerName","field","colId","cellRenderer","params","defaultColDef","sortable","gridOptions","suppressNoRowsOverlay","animateRows","onGridReady","api","sizeColumnsToFit","ISIReceive","ISIReport","ISISignOut","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c20f33e7.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport {useHistory} from 'react-router-dom'\r\nimport { Card, CardDeck } from 'react-bootstrap';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../styles/style.css';\r\n\r\nexport default function Start() {\r\n    useEffect(() => {\r\n        document.title = 'Home - Mona';\r\n    }, []);\r\n\r\n    let history = useHistory();\r\n\r\n    return (\r\n        <div id='card-deck-set'>\r\n            {/* <CardDeck>\r\n                    <Card as='a' href='/eodform' className='card-list' style={{ width: '18rem' }}>\r\n                        <Card.Body>\r\n                            <Card.Title>End of Day Form</Card.Title>\r\n                            <Card.Text>\r\n                                Complete the End of Day report.\r\n                        </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n\r\n                    <Card as='a' href='' className='card-list' style={{ width: '18rem' }}>\r\n                        <Card.Body>\r\n                            <Card.Title>Access Previous EOD</Card.Title>\r\n                            <Card.Text>\r\n                                This is not yet a working function, please do not try to use it!\r\n                        </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </CardDeck>\r\n\r\n                <br /> */}\r\n\r\n            <CardDeck>\r\n                <Card onClick={() => {history.push('/isimenu')}} className='card-list' style={{ width: '18rem' }}>\r\n                    <Card.Body>\r\n                        <Card.Title>ISI Management</Card.Title>\r\n                        <Card.Text>\r\n                            Manage the ISI stock.\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </CardDeck>\r\n\r\n\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Navbar, Button } from 'react-bootstrap';\r\n\r\nexport default function Navigation(props) {\r\n\r\n    let history = useHistory();\r\n\r\n    if (props.proceed === 'true') {\r\n        return (\r\n            <Navbar bg='danger' className='justify-content-between'>\r\n                <Button variant='dark' onClick={() => {history.push(props.from)}}>Back</Button>\r\n                <Button variant='success' onClick={() => {history.push(props.to)}}>Finish</Button>\r\n            </Navbar>\r\n        )\r\n    } else if (props.proceed === 'false') {\r\n        return (\r\n            <Navbar bg='danger' className='justify-content-between'>\r\n                <Button variant='dark' onClick={() => {history.push(props.from)}}>Back</Button>\r\n            </Navbar>\r\n        )\r\n    }\r\n}","import React, { useEffect } from \"react\";\r\nimport { Card, CardDeck } from \"react-bootstrap\";\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Navigation from '../components/Navigation'\r\n\r\nimport '../styles/style.css';\r\n\r\nexport default function ISIMenu() {\r\n    useEffect(() => {\r\n        document.title = 'ISI Management - Mona';\r\n    }, []);\r\n\r\n    let history = useHistory()\r\n    \r\n    return (\r\n        <div>\r\n            <Navigation proceed='false' from='/' />\r\n            <div id='card-deck-set'>\r\n                <CardDeck>\r\n                    <Card onClick={() => {history.push('/isireceive')}} className='card-list' style={{ width: '18rem', cursor: \"pointer\" }}>\r\n                        <Card.Body>\r\n                            <Card.Title>Receive</Card.Title>\r\n                            <Card.Text>\r\n                                Receive shipments of ISI books.\r\n                                </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </CardDeck>\r\n                <br />\r\n\r\n                <CardDeck>\r\n                    <Card onClick={() => {history.push('isisignout')}} className='card-list' style={{ width: '18rem', cursor: \"pointer\" }}>\r\n                        <Card.Body>\r\n                            <Card.Title>Sign Out</Card.Title>\r\n                            <Card.Text>\r\n                                Sign ISI books out of the safe\r\n                                </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </CardDeck>\r\n                <br />\r\n\r\n                <CardDeck>\r\n                    <Card onClick={() => {history.push('isireport')}} className='card-list' style={{ width: '18rem', cursor: \"pointer\" }}>\r\n                        <Card.Body>\r\n                            <Card.Title>Reports</Card.Title>\r\n                            <Card.Text>\r\n                                Generate and view various ISI reports\r\n                                </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </CardDeck>\r\n                <br />\r\n\r\n                <CardDeck>\r\n                    <Card onClick={() => {history.push('isimanage')}} className='card-list' style={{ width: '18rem', cursor: \"pointer\" }}>\r\n                        <Card.Body>\r\n                            <Card.Title>Manage</Card.Title>\r\n                            <Card.Text>\r\n                                Manage ISI book types\r\n                                </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n\r\n                </CardDeck>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Button, Modal, InputGroup, FormControl } from 'react-bootstrap'\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport axios from 'axios'\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\n\r\nimport Navigation from '../../components/Navigation'\r\n\r\nlet new_book_data = {\r\n    game_id: '',\r\n    ticket_value: '',\r\n    ticket_name: '',\r\n    book_value: '',\r\n    current_game: true,\r\n}\r\n\r\nexport default function ISIManage() {\r\n    const [rowData, setRowData] = useState([]);\r\n    const [addIsLoading, setAddIsLoading] = useState(true);\r\n    const [rowIndexToUse, setRowIndexToUse] = useState(null);\r\n    const [showAddDialog, setShowAddDialog] = useState(false);\r\n    const [showDelDialog, setShowDelDialog] = useState(false);\r\n    const gridApi = useRef()\r\n\r\n    const closeAddDialog = () => setShowAddDialog(false);\r\n    const openAddDialog = () => setShowAddDialog(true);\r\n\r\n    const closeDelDialog = () => setShowDelDialog(false);\r\n    const openDelDialog = () => setShowDelDialog(true);\r\n\r\n    const onGridReady = (params) => {\r\n        gridApi.current = params.api\r\n        gridApi.current.sizeColumnsToFit();\r\n\r\n    };\r\n\r\n    const columnDefs = [\r\n        {\r\n            headerName: \"Game Number\",\r\n            field: \"game_id\",\r\n        },\r\n        {\r\n            headerName: \"Ticket Value\",\r\n            field: \"ticket_value\",\r\n        },\r\n        {\r\n            headerName: \"Ticket Name\",\r\n            field: \"ticket_name\",\r\n        },\r\n        {\r\n            headerName: \"Book Value\",\r\n            field: \"book_value\",\r\n        },\r\n        {\r\n            headerName: \"Current Game?\",\r\n            field: \"current_game\",\r\n            colId: 'params',\r\n            cellRenderer: params => {\r\n                return `<input type='checkbox' disabled ${params.value ? 'checked' : ''} />`;\r\n            }\r\n        },\r\n        {\r\n            headerName: \"\",\r\n            field: \"test_field\",\r\n            cellRenderer: 'cellControlButtons',\r\n        }\r\n    ];\r\n\r\n    const frameworkComponents = {\r\n        cellControlButtons: cellControlButtons,\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = 'Manage ISI Types - Mona';\r\n        fetchData()\r\n    }, []);\r\n\r\n    // Get data from the API and set it\r\n    function fetchData() {\r\n        axios.get('/api/isi-game-types-download')\r\n            .then((res) => (res.data.rows))\r\n            .then((rows) =>\r\n                rows.map((book) => {\r\n                    return {\r\n                        game_id: book.game_id,\r\n                        ticket_value: book.ticket_value,\r\n                        ticket_name: book.ticket_name,\r\n                        book_value: book.book_value,\r\n                        current_game: book.current_game,\r\n                    };\r\n                })\r\n            )\r\n            .then((books) => setRowData(books))\r\n            .then(() => gridApi.current.hideOverlay())\r\n            .then(() => setAddIsLoading(false));\r\n    }\r\n\r\n    // Render the edit and delete buttons in each cell\r\n    function cellControlButtons(props) {\r\n        return (\r\n            <span>\r\n                <Button variant='outline-secondary' size='sm' onClick={() => {\r\n                    let data = gridApi.current.getDisplayedRowAtIndex(props.node.rowIndex).data\r\n                    new_book_data['game_id'] = data.game_id                           \r\n                    new_book_data['ticket_value'] = data.ticket_value                        \r\n                    new_book_data['book_value'] = data.book_value                        \r\n                    new_book_data['ticket_name'] = data.ticket_name\r\n                    new_book_data['current_game'] = data.current_game    \r\n                    openAddDialog()\r\n                    }}>Edit</Button>{' '}\r\n\r\n                <Button variant='outline-secondary' size='sm' onClick={() => {\r\n                    setRowIndexToUse(props.node.rowIndex)\r\n                    openDelDialog()\r\n                }}\r\n                >Delete</Button>\r\n            </span>\r\n        );\r\n    }\r\n\r\n    function gameDelete() {\r\n        closeDelDialog();\r\n        setAddIsLoading(true);\r\n        gridApi.current.showLoadingOverlay();\r\n        axios.get('/api/isi-game-delete/' + gridApi.current.getDisplayedRowAtIndex(rowIndexToUse).data.game_id)\r\n            .then(() => fetchData())\r\n            .then(() => setRowIndexToUse(null))\r\n    }\r\n\r\n    function gameEdit(rowIndex) {\r\n        let rowValues = gridApi.current.getDisplayedRowAtIndex(rowIndex);\r\n        // console.log(rowValues)\r\n    }\r\n\r\n    function gameAdd() {\r\n        closeAddDialog();\r\n        setAddIsLoading(true);\r\n        gridApi.current.showLoadingOverlay()\r\n        axios.post('/api/isi-game-types-upload', new_book_data)\r\n            .then(() => fetchData())\r\n            .then(new_book_data = {\r\n                game_id: '',\r\n                ticket_value: '',\r\n                ticket_name: '',\r\n                book_value: '',\r\n                current_game: true,\r\n            })\r\n    }\r\n\r\n    function numberValidator(event) {\r\n        let re = /^[0-9]*$/;\r\n        let val = re.exec(event.target.value);\r\n\r\n        if (val !== null) {\r\n            event.target.value = val[0]\r\n            new_book_data[event.target.name] = event.target.value\r\n        } else {\r\n            event.target.value = new_book_data[event.target.name]\r\n        }\r\n    }\r\n\r\n    function valueUpdater(event) {\r\n        new_book_data[event.target.name] = event.target.value;\r\n    }\r\n\r\n    function toggleCurrentGame(event) {\r\n        new_book_data['current_game'] = event.target.checked\r\n    }\r\n\r\n    const GameData = () => {\r\n        if (rowIndexToUse !== null) {\r\n            return (\r\n                <span><i>\r\n                    {gridApi.current.getDisplayedRowAtIndex(rowIndexToUse).data.ticket_value}{' '}\r\n                    {gridApi.current.getDisplayedRowAtIndex(rowIndexToUse).data.ticket_name}{' '}\r\n                    ({gridApi.current.getDisplayedRowAtIndex(rowIndexToUse).data.game_id})\r\n                </i></span>\r\n            )\r\n        } else {\r\n            return (\r\n                <span>UNKOWN</span>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navigation proceed='false' from='/isimenu' />\r\n            <div class='add-isi-button'>\r\n            <Button variant=\"outline-danger\" onClick={!addIsLoading ? openAddDialog : null}>{addIsLoading ? 'Loading...' : 'Add ISI Game'}</Button>\r\n            </div>\r\n\r\n            {/* Modal for adding ISI books */}\r\n            <Modal\r\n                show={showAddDialog}\r\n                onHide={closeAddDialog}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>Add ISI Game Type</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <InputGroup className='mb-3'>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Game Number</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl\r\n                            type='text'\r\n                            onChange={numberValidator}\r\n                            name='game_id'\r\n                            placeholder={new_book_data.game_id}\r\n                        />\r\n                    </InputGroup>\r\n\r\n                    <InputGroup className='mb-3'>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Ticket Value</InputGroup.Text>\r\n                            <InputGroup.Text>$</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl\r\n                            type='text'\r\n                            onChange={numberValidator}\r\n                            name='ticket_value'\r\n                            defaultValue={new_book_data.ticket_value}\r\n                        />\r\n                    </InputGroup>\r\n\r\n                    <InputGroup className='mb-3'>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Book Value</InputGroup.Text>\r\n                            <InputGroup.Text>$</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl\r\n                            type='text'\r\n                            onChange={numberValidator}\r\n                            name='book_value'\r\n                            defaultValue={new_book_data.book_value}\r\n                        />\r\n                    </InputGroup>\r\n\r\n                    <InputGroup className='mb-3'>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Ticket Name</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl\r\n                            type='text'\r\n                            onChange={valueUpdater}\r\n                            name='ticket_name'\r\n                            defaultValue={new_book_data.ticket_name}\r\n                        />\r\n                    </InputGroup>\r\n\r\n                    <InputGroup className='mb-3'>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Current Game?</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <InputGroup.Append>\r\n                            <InputGroup.Checkbox defaultChecked={new_book_data.current_game} onChange={(event) => toggleCurrentGame(event)}></InputGroup.Checkbox>\r\n                        </InputGroup.Append>\r\n\r\n                    </InputGroup>\r\n\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => {\r\n                        new_book_data = {\r\n                            game_id: '',\r\n                            ticket_value: '',\r\n                            ticket_name: '',\r\n                            book_value: '',\r\n                            current_game: true,\r\n                        }\r\n                        closeAddDialog()\r\n                    }}>Close</Button>\r\n                    <Button variant=\"success\" onClick={gameAdd}>Save</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* Modal for deleting ISI books */}\r\n            <Modal\r\n                show={showDelDialog}\r\n                onHide={closeDelDialog}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>Delete Game?</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    Are you sure you want to delete the <GameData /> game?\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeDelDialog}>Cancel</Button>\r\n                    <Button variant=\"danger\" onClick={gameDelete}>Delete</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <div\r\n                className=\"ag-theme-alpine\"\r\n                style={{\r\n                    width: \"100%\",\r\n                }}\r\n            >\r\n                <AgGridReact\r\n                    domLayout={\"autoHeight\"}\r\n                    columnDefs={columnDefs}\r\n                    defaultColDef={{\r\n                        sortable: true,\r\n                    }}\r\n                    gridOptions={{\r\n                        suppressNoRowsOverlay: true,\r\n                    }}\r\n                    rowData={rowData}\r\n                    animateRows={true}\r\n                    onGridReady={onGridReady}\r\n                    frameworkComponents={frameworkComponents}\r\n                ></AgGridReact>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from \"react\";\r\n\r\nimport Navigation from '../../components/Navigation'\r\n\r\nexport default function ISIReceive() {\r\n    useEffect(() => {\r\n        document.title = 'Receive ISI - Mona';\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Navigation proceed='false' from='/isimenu' />\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from \"react\";\r\n\r\nimport Navigation from '../../components/Navigation'\r\n\r\nexport default function ISIReport() {\r\n    useEffect(() => {\r\n        document.title = 'ISI Reports - Mona';\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Navigation proceed='false' from='/isimenu' />\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from \"react\";\r\n\r\nimport Navigation from '../../components/Navigation'\r\n\r\nexport default function ISISignOut() {\r\n    useEffect(() => {\r\n        document.title = 'Sign Out ISI - Mona';\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Navigation proceed='false' from='/isimenu' />\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Start from './pages/Start';\r\nimport EODForm from './pages/EODForm';\r\nimport ReportView from './pages/ReportView';\r\nimport ISIMenu from './pages/ISIMenu'\r\nimport ISIManage from './pages/ISIManagement/ISIManage'\r\nimport ISIReceive from './pages/ISIManagement/ISIReceive'\r\nimport ISIReport from './pages/ISIManagement/ISIReport'\r\nimport ISISignOut from './pages/ISIManagement/ISISignOut'\r\n\r\nexport default function App() {\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"App\">\r\n                <Switch>\r\n                    {/* Route for Start page */}\r\n                    <Route exact path='/'>\r\n                        <Start />\r\n                    </Route>\r\n\r\n                    {/* Route for the EOD Form page */}\r\n                    {/* <Route exact path='/eodform'>\r\n                        <EODForm />\r\n                    </Route> */}\r\n\r\n                    {/* Route for the EOD Report Page page */}\r\n                    {/* <Route exact path='/reportview'>\r\n                        <ReportView />\r\n                    </Route> */}\r\n\r\n                    {/* Route for the ISI Management page */}\r\n                    <Route exact path='/isimenu'>\r\n                        <ISIMenu />\r\n                    </Route>\r\n\r\n                    {/* Route for the ISI Manage page */}\r\n                    <Route exact path='/isimanage'>\r\n                        <ISIManage />\r\n                    </Route>\r\n\r\n                    {/* Route for the ISI Receive page */}\r\n                    <Route exact path='/isireceive'>\r\n                        <ISIReceive />\r\n                    </Route>\r\n\r\n                    {/* Route for the ISI Report page */}\r\n                    <Route exact path='/isireport'>\r\n                        <ISIReport />\r\n                    </Route>\r\n\r\n                    {/* Route for the ISI Sign Out page */}\r\n                    <Route exact path='/isisignout'>\r\n                        <ISISignOut />\r\n                    </Route>\r\n\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}