{"version":3,"sources":["pages/Start.jsx","components/Navigation.jsx","pages/ISIMenu.jsx","pages/ISIManagement/ISIManage.jsx","pages/ISIManagement/ISIReceive.jsx","pages/ISIManagement/ISIReport.jsx","pages/ISIManagement/ISISignOut.jsx","App.js","reportWebVitals.js","index.js"],"names":["Start","useEffect","document","title","history","useHistory","id","CardDeck","Card","onClick","push","className","style","width","Body","Title","Text","Navigation","props","proceed","Navbar","bg","expand","Button","variant","from","to","label","ISIMenu","cursor","new_book_data","game_id","ticket_value","ticket_name","book_value","current_game","ISIManage","useState","rowData","setRowData","addIsLoading","setAddIsLoading","rowIndexToUse","setRowIndexToUse","showAddDialog","setShowAddDialog","showDelDialog","setShowDelDialog","gridApi","useRef","closeAddDialog","openAddDialog","closeDelDialog","frameworkComponents","cellControlButtons","size","data","current","getDisplayedRowAtIndex","node","rowIndex","fetchData","axios","get","then","res","rows","map","book","books","hideOverlay","numberValidator","event","val","exec","target","value","name","GameData","Modal","show","onHide","backdrop","keyboard","Header","InputGroup","Prepend","FormControl","type","onChange","placeholder","defaultValue","Append","Checkbox","defaultChecked","checked","toggleCurrentGame","Footer","showLoadingOverlay","toUpperCase","post","domLayout","columnDefs","headerName","field","cellStyle","suppressMovable","floatingFilter","filter","headerTooltip","colId","cellRenderer","params","defaultColDef","sortable","gridOptions","suppressNoRowsOverlay","animateRows","onGridReady","api","sizeColumnsToFit","missingBook","shipmentBooks","shipmentData","shipment_id","date_received","ISIReceive","showShipmentIdDialog","setShowShipmentIdDialog","showExistsDialog","setShowExistsDialog","showNotExistsDialog","setShowNotExistsDialog","showSuccessDialog","setShowSuccessDialog","Date","selectedDate","setSelectedDate","isiInput","closeShipmentIdDialog","closeExistsDialog","closeNotExistsDialog","closeSuccessDialog","valueFormatter","replace","bookNumber","book_number","item","gridSetter","game","games","catch","err","response","err_type","idReg","bookReg","dataToPost","i","length","gameID","selected","dateFormat","date","getFullYear","getMonth","getDate","ref","onKeyUp","key","setHeaderHeight","ISIReport","bookToAdd","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.425be594.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport {useHistory} from 'react-router-dom'\r\nimport { Card, CardDeck } from 'react-bootstrap';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../styles/style.css';\r\n\r\nexport default function Start() {\r\n    useEffect(() => {\r\n        document.title = 'Home - Mona';\r\n    }, []);\r\n\r\n    let history = useHistory();\r\n\r\n    return (\r\n        <div id='card-deck-set'>\r\n            {/* <CardDeck>\r\n                    <Card as='a' href='/eodform' className='card-list' style={{ width: '18rem' }}>\r\n                        <Card.Body>\r\n                            <Card.Title>End of Day Form</Card.Title>\r\n                            <Card.Text>\r\n                                Complete the End of Day report.\r\n                        </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n\r\n                    <Card as='a' href='' className='card-list' style={{ width: '18rem' }}>\r\n                        <Card.Body>\r\n                            <Card.Title>Access Previous EOD</Card.Title>\r\n                            <Card.Text>\r\n                                This is not yet a working function, please do not try to use it!\r\n                        </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </CardDeck>\r\n\r\n                <br /> */}\r\n\r\n            <CardDeck>\r\n                <Card onClick={() => {history.push('/isimenu')}} className='card-list' style={{ width: '18rem' }}>\r\n                    <Card.Body>\r\n                        <Card.Title>ISI Management</Card.Title>\r\n                        <Card.Text>\r\n                            Manage the ISI stock.\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </CardDeck>\r\n\r\n\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Navbar, Button } from 'react-bootstrap';\r\n\r\nexport default function Navigation(props) {\r\n\r\n    let history = useHistory();\r\n\r\n    if (props.proceed === 'true') {\r\n        return (\r\n            <Navbar bg='danger' expand='lg'>\r\n                <Button variant='dark' onClick={() => { history.push(props.from) }}>Back</Button>\r\n                <Button variant='success' onClick={() => { history.push(props.to) }}>{props.label}</Button>\r\n            </Navbar>\r\n        )\r\n    } else if (props.proceed === 'false') {\r\n        return (\r\n            <Navbar bg='danger' expand='lg'>\r\n                <Button variant='dark' onClick={() => { history.push(props.from) }}>Back</Button>\r\n            </Navbar>\r\n        )\r\n    }\r\n}","import React, { useEffect } from \"react\";\r\nimport { Card, CardDeck } from \"react-bootstrap\";\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Navigation from '../components/Navigation'\r\n\r\nimport '../styles/style.css';\r\n\r\nexport default function ISIMenu() {\r\n    useEffect(() => {\r\n        document.title = 'ISI Management - Mona';\r\n    }, []);\r\n\r\n    let history = useHistory()\r\n\r\n    return (\r\n        <div>\r\n            <Navigation proceed='false' from='/' />\r\n            <div id='card-deck-set'>\r\n                <CardDeck>\r\n                    <Card onClick={() => { history.push('/isireceive') }} className='card-list' style={{ width: '18rem', cursor: \"pointer\" }}>\r\n                        <Card.Body>\r\n                            <Card.Title>Receive</Card.Title>\r\n                            <Card.Text>\r\n                                Receive shipments of ISI books.\r\n                                </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n\r\n                    <Card onClick={() => { history.push('isisignout') }} className='card-list' style={{ width: '18rem', cursor: \"pointer\" }}>\r\n                        <Card.Body>\r\n                            <Card.Title>Sign Out</Card.Title>\r\n                            <Card.Text>\r\n                                Sign ISI books out of the safe\r\n                                </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </CardDeck>\r\n                <br />\r\n\r\n                <CardDeck>\r\n                    <Card onClick={() => { history.push('isireport') }} className='card-list' style={{ width: '18rem', cursor: \"pointer\" }}>\r\n                        <Card.Body>\r\n                            <Card.Title>Reports</Card.Title>\r\n                            <Card.Text>\r\n                                Generate and view various ISI reports\r\n                                </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n\r\n                    <Card onClick={() => { history.push('isimanage') }} className='card-list' style={{ width: '18rem', cursor: \"pointer\" }}>\r\n                        <Card.Body>\r\n                            <Card.Title>Manage</Card.Title>\r\n                            <Card.Text>\r\n                                Manage ISI book types\r\n                                </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n\r\n                </CardDeck>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Button, Modal, InputGroup, FormControl } from 'react-bootstrap'\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport axios from 'axios'\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\n\r\nimport Navigation from '../../components/Navigation'\r\n\r\nlet new_book_data = {\r\n    game_id: '',\r\n    ticket_value: '',\r\n    ticket_name: '',\r\n    book_value: '',\r\n    current_game: true,\r\n}\r\n\r\nexport default function ISIManage() {\r\n    const [rowData, setRowData] = useState([]);\r\n    const [addIsLoading, setAddIsLoading] = useState(true);\r\n    const [rowIndexToUse, setRowIndexToUse] = useState(null);\r\n    const [showAddDialog, setShowAddDialog] = useState(false);\r\n    const [showDelDialog, setShowDelDialog] = useState(false);\r\n\r\n    const gridApi = useRef()\r\n\r\n    const closeAddDialog = () => setShowAddDialog(false);\r\n    const openAddDialog = () => setShowAddDialog(true);\r\n\r\n    const closeDelDialog = () => setShowDelDialog(false);\r\n    const openDelDialog = () => setShowDelDialog(true);\r\n\r\n    const onGridReady = (params) => {\r\n        gridApi.current = params.api\r\n        gridApi.current.sizeColumnsToFit();\r\n\r\n    };\r\n\r\n    const columnDefs = [\r\n        {\r\n            headerName: \"Game Number\",\r\n            field: \"game_id\",\r\n            cellStyle: { 'text-align': 'center' },\r\n            suppressMovable: true,\r\n            floatingFilter: true,\r\n            filter: true,\r\n            headerTooltip: 'ISI game Number',\r\n        },\r\n        {\r\n            headerName: \"Ticket Value\",\r\n            field: \"ticket_value\",\r\n            cellStyle: { 'text-align': 'center' },\r\n            suppressMovable: true,\r\n            headerTooltip: 'ISI ticket Value',\r\n        },\r\n        {\r\n            headerName: \"Ticket Name\",\r\n            field: \"ticket_name\",\r\n            cellStyle: { 'text-align': 'center' },\r\n            suppressMovable: true,\r\n            floatingFilter: true,\r\n            filter: true,\r\n            headerTooltip: 'ISI ticket name',\r\n        },\r\n        {\r\n            headerName: \"Book Value\",\r\n            field: \"book_value\",\r\n            cellStyle: { 'text-align': 'center' },\r\n            suppressMovable: true,\r\n            headerTooltip: 'ISI book value',\r\n        },\r\n        {\r\n            headerName: \"Current Game?\",\r\n            field: \"current_game\",\r\n            colId: 'params',\r\n            cellRenderer: params => {\r\n                return `<input type='checkbox' disabled ${params.value ? 'checked' : ''} />`;\r\n            },\r\n            cellStyle: { 'text-align': 'center' },\r\n            suppressMovable: true,\r\n            headerTooltip: 'Is this a current ISI game?',\r\n        },\r\n        {\r\n            headerName: \"\",\r\n            field: \"button_field\",\r\n            cellRenderer: 'cellControlButtons',\r\n            cellStyle: { 'text-align': 'right' },\r\n            suppressMovable: true,\r\n        }\r\n    ];\r\n\r\n    const frameworkComponents = {\r\n        cellControlButtons: cellControlButtons,\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = 'Manage ISI Types - Mona';\r\n        fetchData()\r\n    }, []);\r\n\r\n    // Get data from the API and set it\r\n    function fetchData() {\r\n        axios.get('/api/isi-game-types-download')\r\n            .then((res) => (res.data.rows))\r\n            .then((rows) =>\r\n                rows.map((book) => {\r\n                    return {\r\n                        game_id: book.game_id,\r\n                        ticket_value: book.ticket_value,\r\n                        ticket_name: book.ticket_name,\r\n                        book_value: book.book_value,\r\n                        current_game: book.current_game,\r\n                    };\r\n                })\r\n            )\r\n            .then((books) => setRowData(books))\r\n            .then(() => gridApi.current.hideOverlay())\r\n            .then(() => setAddIsLoading(false));\r\n    }\r\n\r\n    // Render the edit and delete buttons in each cell\r\n    function cellControlButtons(props) {\r\n        return (\r\n            <span>\r\n                <Button variant='outline-secondary' size='sm' onClick={() => {\r\n                    let data = gridApi.current.getDisplayedRowAtIndex(props.node.rowIndex).data\r\n                    new_book_data['game_id'] = data.game_id\r\n                    new_book_data['ticket_value'] = data.ticket_value\r\n                    new_book_data['book_value'] = data.book_value\r\n                    new_book_data['ticket_name'] = data.ticket_name\r\n                    new_book_data['current_game'] = data.current_game\r\n                    openAddDialog()\r\n                }}>Edit</Button>{' '}\r\n\r\n                <Button variant='outline-secondary' size='sm' onClick={() => {\r\n                    setRowIndexToUse(props.node.rowIndex)\r\n                    openDelDialog()\r\n                }}\r\n                >Delete</Button>\r\n            </span>\r\n        );\r\n    }\r\n\r\n    function gameDelete() {\r\n        closeDelDialog();\r\n        setAddIsLoading(true);\r\n        gridApi.current.showLoadingOverlay();\r\n        axios.get('/api/isi-game-delete/' + gridApi.current.getDisplayedRowAtIndex(rowIndexToUse).data.game_id)\r\n            .then(() => fetchData())\r\n            .then(() => setRowIndexToUse(null))\r\n    }\r\n\r\n    function gameAdd() {\r\n        closeAddDialog();\r\n        setAddIsLoading(true);\r\n        gridApi.current.showLoadingOverlay();\r\n        new_book_data['ticket_name'] = new_book_data['ticket_name'].toUpperCase();\r\n        axios.post('/api/isi-game-types-upload', new_book_data)\r\n            .then(() => fetchData())\r\n            .then(new_book_data = {\r\n                game_id: '',\r\n                ticket_value: '',\r\n                ticket_name: '',\r\n                book_value: '',\r\n                current_game: true,\r\n            });\r\n    }\r\n\r\n    function numberValidator(event) {\r\n        let re = /^[0-9]*$/;\r\n        let val = re.exec(event.target.value);\r\n\r\n        if (val !== null) {\r\n            event.target.value = val[0]\r\n            new_book_data[event.target.name] = event.target.value\r\n        } else {\r\n            event.target.value = new_book_data[event.target.name]\r\n        }\r\n    }\r\n\r\n    function valueUpdater(event) {\r\n        new_book_data[event.target.name] = event.target.value;\r\n    }\r\n\r\n    function toggleCurrentGame(event) {\r\n        new_book_data['current_game'] = event.target.checked\r\n    }\r\n\r\n    const GameData = () => {\r\n        if (rowIndexToUse !== null) {\r\n            return (\r\n                <span><i>\r\n                    {gridApi.current.getDisplayedRowAtIndex(rowIndexToUse).data.ticket_value}{' '}\r\n                    {gridApi.current.getDisplayedRowAtIndex(rowIndexToUse).data.ticket_name}{' '}\r\n                    ({gridApi.current.getDisplayedRowAtIndex(rowIndexToUse).data.game_id})\r\n                </i></span>\r\n            )\r\n        } else {\r\n            return (\r\n                <span>UNKOWN</span>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navigation proceed='false' from='/isimenu' />\r\n            <div className='add-isi-button'>\r\n                <Button variant=\"outline-danger\" onClick={!addIsLoading ? openAddDialog : null}>{addIsLoading ? 'Loading...' : 'Add ISI Game'}</Button>\r\n            </div>\r\n\r\n            {/* Modal for adding ISI books */}\r\n            <Modal\r\n                show={showAddDialog}\r\n                onHide={closeAddDialog}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>ISI Game Details</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <InputGroup className='mb-3'>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Game Number</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl\r\n                            type='text'\r\n                            onChange={numberValidator}\r\n                            name='game_id'\r\n                            placeholder={new_book_data.game_id}\r\n                        />\r\n                    </InputGroup>\r\n\r\n                    <InputGroup className='mb-3'>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Ticket Value</InputGroup.Text>\r\n                            <InputGroup.Text>$</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl\r\n                            type='text'\r\n                            onChange={numberValidator}\r\n                            name='ticket_value'\r\n                            defaultValue={new_book_data.ticket_value}\r\n                        />\r\n                    </InputGroup>\r\n\r\n                    <InputGroup className='mb-3'>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Book Value</InputGroup.Text>\r\n                            <InputGroup.Text>$</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl\r\n                            type='text'\r\n                            onChange={numberValidator}\r\n                            name='book_value'\r\n                            defaultValue={new_book_data.book_value}\r\n                        />\r\n                    </InputGroup>\r\n\r\n                    <InputGroup className='mb-3'>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Ticket Name</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl\r\n                            type='text'\r\n                            onChange={valueUpdater}\r\n                            name='ticket_name'\r\n                            defaultValue={new_book_data.ticket_name}\r\n                        />\r\n                    </InputGroup>\r\n\r\n                    <InputGroup className='mb-3'>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Current Game?</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <InputGroup.Append>\r\n                            <InputGroup.Checkbox defaultChecked={new_book_data.current_game} onChange={(event) => toggleCurrentGame(event)}></InputGroup.Checkbox>\r\n                        </InputGroup.Append>\r\n\r\n                    </InputGroup>\r\n\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => {\r\n                        new_book_data = {\r\n                            game_id: '',\r\n                            ticket_value: '',\r\n                            ticket_name: '',\r\n                            book_value: '',\r\n                            current_game: true,\r\n                        }\r\n                        closeAddDialog()\r\n                    }}>Close</Button>\r\n                    <Button variant=\"success\" onClick={gameAdd}>Save</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* Modal for deleting ISI books */}\r\n            <Modal\r\n                show={showDelDialog}\r\n                onHide={closeDelDialog}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>Delete Game?</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    Are you sure you want to delete the <GameData /> game?\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeDelDialog}>Cancel</Button>\r\n                    <Button variant=\"danger\" onClick={gameDelete}>Delete</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <div\r\n                className=\"ag-theme-alpine\"\r\n                style={{\r\n                    width: \"100%\",\r\n                }}\r\n            >\r\n                <AgGridReact\r\n                    domLayout={\"autoHeight\"}\r\n                    columnDefs={columnDefs}\r\n                    defaultColDef={{\r\n                        sortable: true,\r\n                    }}\r\n                    gridOptions={{\r\n                        suppressNoRowsOverlay: true,\r\n                    }}\r\n                    rowData={rowData}\r\n                    animateRows={true}\r\n                    onGridReady={onGridReady}\r\n                    frameworkComponents={frameworkComponents}\r\n                ></AgGridReact>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState, useRef } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Modal, Button, InputGroup, FormControl, Navbar } from 'react-bootstrap';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport axios from 'axios'\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nlet missingBook = ''\r\nlet shipmentBooks = [];\r\nlet shipmentData = {\r\n    shipment_id: '',\r\n    date_received: '',\r\n};\r\n\r\nexport default function ISIReceive() {\r\n    let history = useHistory()\r\n\r\n    // CHANGE ME BACK TO TRUE FOR ACTUAL PRODUCTION\r\n    const [showShipmentIdDialog, setShowShipmentIdDialog] = useState(false);\r\n    const [showExistsDialog, setShowExistsDialog] = useState(false);\r\n    const [showNotExistsDialog, setShowNotExistsDialog] = useState(false);\r\n    const [showSuccessDialog, setShowSuccessDialog] = useState(false)\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n    const [addIsLoading, setAddIsLoading] = useState(false);\r\n    const [rowData, setRowData] = useState([]);\r\n\r\n    // const [isiInput, setIsiInput] = useState();\r\n\r\n    const gridApi = useRef();\r\n    const isiInput = useRef(null);\r\n\r\n    const closeShipmentIdDialog = () => setShowShipmentIdDialog(false);\r\n    const openShipmentIdDialog = () => setShowShipmentIdDialog(true);\r\n    const closeExistsDialog = () => setShowExistsDialog(false);\r\n    const openExistsDialog = () => setShowExistsDialog(true);\r\n    const closeNotExistsDialog = () => setShowNotExistsDialog(false);\r\n    const openNotExistsDialog = () => setShowNotExistsDialog(true);\r\n    const closeSuccessDialog = () => setShowSuccessDialog(false);\r\n    const openSuccessDialog = () => setShowSuccessDialog(true);\r\n\r\n    useEffect(() => {\r\n        document.title = 'Receive ISI - Mona';\r\n    }, []);\r\n\r\n    const onGridReady = (params) => {\r\n        gridApi.current = params.api\r\n        gridApi.current.sizeColumnsToFit();\r\n        gridApi.current.setHeaderHeight(0);\r\n    };\r\n\r\n    const columnDefs = [\r\n        {\r\n            headerName: \"Book Number\",\r\n            field: \"book_number\",\r\n            valueFormatter: bookNumberFormatter,\r\n        },\r\n        {\r\n            headerName: \"Ticket Value\",\r\n            field: \"ticket_value\",\r\n        },\r\n        {\r\n            headerName: \"Ticket Name\",\r\n            field: \"ticket_name\",\r\n        },\r\n        {\r\n            headerName: \"\",\r\n            field: \"button_field\",\r\n            cellRenderer: 'cellControlButtons',\r\n            cellStyle: { 'text-align': 'right' }\r\n        }\r\n    ];\r\n\r\n    const frameworkComponents = {\r\n        cellControlButtons: cellControlButtons,\r\n    };\r\n\r\n    function cellControlButtons(props) {\r\n        return (\r\n            <span>\r\n                <Button variant='outline-secondary' size='sm' onClick={() => {\r\n                    let bookNumber = gridApi.current.getDisplayedRowAtIndex(props.node.rowIndex).data.book_number;\r\n                    shipmentBooks = shipmentBooks.filter((item) => {\r\n                        return item.book_number !== bookNumber\r\n                    })\r\n                    gridApi.current.setRowData(shipmentBooks);\r\n                }}\r\n                >Remove</Button>\r\n            </span>\r\n        );\r\n    }\r\n\r\n    function bookNumberFormatter(params) {\r\n        return params.value.replace(/(\\d{4})(\\d{6})(\\d{3})(\\d{1})/, \"$1-$2-$3•$4\")\r\n    }\r\n\r\n    function receiveShipment() {\r\n        let idReg = /^[0-9]{4}/;\r\n        let bookReg = /^[0-9]{4}([0-9]{6})/;\r\n\r\n        let dataToPost = []\r\n\r\n        for (let i = 0; i < shipmentBooks.length; i++) {\r\n            let gameID = idReg.exec(shipmentBooks[i].book_number)[0]\r\n            let bookNumber = bookReg.exec(shipmentBooks[i].book_number)[1]\r\n\r\n            dataToPost[i] = { game_id: gameID, book_number: bookNumber }\r\n        }\r\n\r\n        axios.post('/api/receive-isi-shipment/?shipment_id=' + shipmentData.shipment_id, dataToPost)\r\n            .then(() => openSuccessDialog())\r\n            .then(() => {\r\n                shipmentData = {};\r\n                shipmentBooks = [];\r\n            })\r\n    }\r\n\r\n    function shipmentAdd() {\r\n        setAddIsLoading(true);\r\n        shipmentData['date_received'] = selectedDate.getFullYear() + '-' + (selectedDate.getMonth() + 1) + '-' + selectedDate.getDate();\r\n        axios.post('/api/shipment-details-upload', shipmentData)\r\n            .then(() => setShowShipmentIdDialog(false))\r\n            .then(() => setAddIsLoading(false))\r\n            // .then(shipmentData.shipment_id = '')\r\n            .catch((err) => {\r\n                if (err.response.data.err_type === 'already_exists') {\r\n                    closeShipmentIdDialog()\r\n                    openExistsDialog()\r\n                }\r\n            })\r\n    }\r\n\r\n    // Ensure that only numbers are entered in corresponding input boxes\r\n    function numberValidator(event) {\r\n        let re = /^[0-9]*$/;\r\n        let val = re.exec(event.target.value);\r\n\r\n        if (val !== null) {\r\n            event.target.value = val[0]\r\n            shipmentData[event.target.name] = event.target.value\r\n        } else {\r\n            event.target.value = shipmentData[event.target.name]\r\n        }\r\n    }\r\n\r\n    function gridSetter(bookNumber) {\r\n        let reg = /^[0-9]{4}/;\r\n        let val = reg.exec(bookNumber);\r\n\r\n        if (val !== null) {\r\n            axios.get('/api/isi-game-details/' + val[0])\r\n                .then((res) => (res.data.rows))\r\n                .then((rows) =>\r\n                    rows.map((game) => {\r\n                        return {\r\n                            ticket_value: game.ticket_value,\r\n                            ticket_name: game.ticket_name,\r\n                        };\r\n                    })\r\n                )\r\n                .then((games) => {\r\n                    shipmentBooks.push({ book_number: bookNumber, ticket_name: games[0].ticket_name, ticket_value: games[0].ticket_value });\r\n                    gridApi.current.setRowData(shipmentBooks);\r\n                })\r\n                .catch((err) => {\r\n                    if (err.response.data.err_type === 'not_exists') {\r\n                        missingBook = val[0];\r\n                        openNotExistsDialog();\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar bg='danger' className='justify-content-between' expand='lg'>\r\n                <Button variant='dark' onClick={() => { history.push('/isimenu') }}>Back</Button>\r\n                <Button variant='success' onClick={receiveShipment}>Receive Shipment</Button>\r\n            </Navbar>\r\n\r\n            {/* Modal for adding isi shipment */}\r\n            <Modal\r\n                show={showShipmentIdDialog}\r\n                onHide={closeShipmentIdDialog}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>Enter Shipment Details</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <InputGroup className='mb-3'>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Received Date</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <DatePicker\r\n                            className='form-control'\r\n                            selected={selectedDate}\r\n                            dateFormat='dd/MM/yyyy'\r\n                            onChange={(date) => (setSelectedDate(date))}\r\n                        />\r\n                    </InputGroup>\r\n\r\n                    <InputGroup className='mb-3'>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Shipment ID</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl\r\n                            type='text'\r\n                            onChange={numberValidator}\r\n                            name='shipment_id'\r\n                            defaultValue={shipmentData.shipment_id}\r\n                        />\r\n                    </InputGroup>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => {\r\n                        shipmentData.shipment_id = ''\r\n                        history.push('/isimenu')\r\n                    }}>Cancel</Button>\r\n                    <Button variant=\"danger\" onClick={!addIsLoading ? shipmentAdd : null}>{addIsLoading ? 'Adding...' : 'Add Shipment'}</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* Modal for shipment that already exists */}\r\n            <Modal\r\n                show={showExistsDialog}\r\n                onHide={closeExistsDialog}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Body>\r\n                    Shipment <i>{shipmentData.shipment_id}</i> has already been added. Would you like to edit this shipment instead?\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => {\r\n                        closeExistsDialog();\r\n                        openShipmentIdDialog();\r\n                        setAddIsLoading(false);\r\n                    }}>Cancel</Button>\r\n                    <Button variant=\"danger\" onClick={closeExistsDialog}>Edit</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* Modal for game that does not exist */}\r\n            <Modal\r\n                show={showNotExistsDialog}\r\n                onHide={closeNotExistsDialog}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Body>\r\n                    Game number <i>{missingBook}</i> does not exist. Please add it into the system through the <b>Manage</b> page.\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={closeNotExistsDialog}>Okay</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {/* Modal for shipment received successfully */}\r\n            <Modal\r\n                show={showSuccessDialog}\r\n                onHide={closeSuccessDialog}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Body>\r\n                    Shipment <i>{shipmentData.shipment_id}</i> has been received successfully\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={() => {\r\n                        closeSuccessDialog();\r\n                        history.push('/isimenu')\r\n                    }}>Okay</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <div className='enter-isi-book'>\r\n                <InputGroup className='mb-3'>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>Scan / Enter ISI Book Number</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl\r\n                        type='text'\r\n                        ref={isiInput}\r\n                        onKeyUp={(event) => {\r\n                            if (event.key === 'Enter') {\r\n                                gridSetter(isiInput.current.value)\r\n                                isiInput.current.value = ''\r\n                            }\r\n                        }}\r\n                    />\r\n                    <InputGroup.Append>\r\n                        <Button onClick={() => {\r\n                            gridSetter(isiInput.current.value);\r\n                            isiInput.current.value = ''\r\n                        }} variant=\"outline-success\">Add</Button>\r\n                    </InputGroup.Append>\r\n                </InputGroup>\r\n            </div>\r\n\r\n            <div\r\n                className=\"ag-theme-alpine\"\r\n                style={{\r\n                    width: \"100%\",\r\n                }}\r\n            >\r\n                <AgGridReact\r\n                    domLayout={\"autoHeight\"}\r\n                    columnDefs={columnDefs}\r\n                    rowData={rowData}\r\n                    animateRows={true}\r\n                    onGridReady={onGridReady}\r\n                    gridOptions={{\r\n                        suppressNoRowsOverlay: true,\r\n                    }}\r\n                    frameworkComponents={frameworkComponents}\r\n                ></AgGridReact>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from \"react\";\r\nimport { Card, CardDeck } from \"react-bootstrap\";\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Navigation from '../../components/Navigation'\r\n\r\nexport default function ISIReport() {\r\n    useEffect(() => {\r\n        document.title = 'ISI Reports - Mona';\r\n    }, []);\r\n\r\n    let history = useHistory();\r\n\r\n    return (\r\n        <div>\r\n            <Navigation proceed='false' from='/isimenu' />\r\n\r\n            <div id='card-deck-set'>\r\n                <CardDeck>\r\n                    <Card onClick={() => { history.push('isireport') }} className='card-list' style={{ width: '18rem', cursor: \"pointer\" }}>\r\n                        <Card.Body>\r\n                            <Card.Text>Stock In Safe</Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </CardDeck>\r\n\r\n                <br />\r\n\r\n                <CardDeck>\r\n                    <Card onClick={() => { history.push('isireport') }} className='card-list' style={{ width: '18rem', cursor: \"pointer\" }}>\r\n                        <Card.Body>\r\n                        <Card.Text>Sales Data</Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </CardDeck>\r\n\r\n                <br />\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Modal, Button, InputGroup, FormControl, Navbar } from 'react-bootstrap';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport axios from 'axios'\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nlet bookToAdd = '';\r\nlet missingBook = ''\r\nlet shipmentBooks = [];\r\nlet shipmentData = {\r\n    shipment_id: '',\r\n    date_received: '',\r\n};\r\n\r\nexport default function ISIReceive() {\r\n    let history = useHistory()\r\n\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n    const [addIsLoading, setAddIsLoading] = useState(false);\r\n    const [rowData, setRowData] = useState([]);\r\n\r\n    const gridApi = useRef();\r\n\r\n\r\n    useEffect(() => {\r\n        document.title = 'Sign Out ISI - Mona';\r\n    }, []);\r\n\r\n    const onGridReady = (params) => {\r\n        gridApi.current = params.api\r\n        gridApi.current.sizeColumnsToFit();\r\n        gridApi.current.setHeaderHeight(0);\r\n    };\r\n\r\n    const columnDefs = [\r\n        {\r\n            headerName: \"Book Number\",\r\n            field: \"book_number\",\r\n            valueFormatter: bookNumberFormatter,\r\n        },\r\n        {\r\n            headerName: \"Ticket Value\",\r\n            field: \"ticket_value\",\r\n        },\r\n        {\r\n            headerName: \"Ticket Name\",\r\n            field: \"ticket_name\",\r\n        },\r\n        {\r\n            headerName: \"\",\r\n            field: \"button_field\",\r\n            cellRenderer: 'cellControlButtons',\r\n            cellStyle: { 'text-align': 'right' }\r\n        }\r\n    ];\r\n\r\n    const frameworkComponents = {\r\n        cellControlButtons: cellControlButtons,\r\n    };\r\n\r\n    function cellControlButtons(props) {\r\n        return (\r\n            <span>\r\n                <Button variant='outline-secondary' size='sm' onClick={() => {\r\n                    let bookNumber = gridApi.current.getDisplayedRowAtIndex(props.node.rowIndex).data.book_number;\r\n                    shipmentBooks = shipmentBooks.filter((item) => {\r\n                        return item.book_number !== bookNumber\r\n                    })\r\n                    gridApi.current.setRowData(shipmentBooks);\r\n                }}\r\n                >Remove</Button>\r\n            </span>\r\n        );\r\n    }\r\n\r\n    function bookNumberFormatter(params) {\r\n        return params.value.replace(/(\\d{4})(\\d{6})(\\d{3})(\\d{1})/, \"$1-$2-$3•$4\")\r\n    }\r\n\r\n    function gridSetter(bookNumber) {\r\n        let reg = /^[0-9]{4}/;\r\n        let val = reg.exec(bookNumber);\r\n\r\n        if (val !== null) {\r\n            axios.get('/api/isi-game-details/' + val[0])\r\n                .then((res) => (res.data.rows))\r\n                .then((rows) =>\r\n                    rows.map((game) => {\r\n                        return {\r\n                            ticket_value: game.ticket_value,\r\n                            ticket_name: game.ticket_name,\r\n                        };\r\n                    })\r\n                )\r\n                .then((games) => {\r\n                    shipmentBooks.push({ book_number: bookNumber, ticket_name: games[0].ticket_name, ticket_value: games[0].ticket_value });\r\n                    gridApi.current.setRowData(shipmentBooks);\r\n                })\r\n                .catch((err) => {\r\n                    if (err.response.data.err_type === 'not_exists') {\r\n                        // missingBook = val[0];\r\n                        // openNotExistsDialog();\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar bg='danger' className='justify-content-between'>\r\n                <Button variant='dark' onClick={() => { history.push('/isimenu') }}>Back</Button>\r\n                <Button variant='success' onClick={null}>Receive Shipment</Button>\r\n            </Navbar>\r\n\r\n    \r\n\r\n            <div className='enter-isi-book'>\r\n                <InputGroup className='mb-3'>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>Scan / Enter ISI Book Number</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl\r\n                        type='text'\r\n                        onKeyUp={(event) => {\r\n                            bookToAdd = event.target.value\r\n                            if (event.key === 'Enter') {\r\n                                gridSetter(bookToAdd)\r\n                                event.target.value = ''\r\n                            }\r\n                        }}\r\n                    />\r\n                    <InputGroup.Append>\r\n                        <Button onClick={() => {\r\n                            gridSetter(bookToAdd)\r\n                        }} variant=\"outline-success\">Add</Button>\r\n                    </InputGroup.Append>\r\n                </InputGroup>\r\n            </div>\r\n\r\n            <div\r\n                className=\"ag-theme-alpine\"\r\n                style={{\r\n                    width: \"100%\",\r\n                }}\r\n            >\r\n                <AgGridReact\r\n                    domLayout={\"autoHeight\"}\r\n                    columnDefs={columnDefs}\r\n                    rowData={rowData}\r\n                    animateRows={true}\r\n                    onGridReady={onGridReady}\r\n                    gridOptions={{\r\n                        suppressNoRowsOverlay: true,\r\n                    }}\r\n                    frameworkComponents={frameworkComponents}\r\n                ></AgGridReact>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Start from './pages/Start';\r\n// import EODForm from './pages/EODForm';\r\n// import ReportView from './pages/ReportView';\r\nimport ISIMenu from './pages/ISIMenu'\r\nimport ISIManage from './pages/ISIManagement/ISIManage'\r\nimport ISIReceive from './pages/ISIManagement/ISIReceive'\r\nimport ISIReport from './pages/ISIManagement/ISIReport'\r\nimport ISISignOut from './pages/ISIManagement/ISISignOut'\r\n\r\nexport default function App() {\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"App\">\r\n                <Switch>\r\n                    {/* Route for Start page */}\r\n                    <Route exact path='/'>\r\n                        <Start />\r\n                    </Route>\r\n\r\n                    {/* Route for the EOD Form page */}\r\n                    {/* <Route exact path='/eodform'>\r\n                        <EODForm />\r\n                    </Route> */}\r\n\r\n                    {/* Route for the EOD Report Page page */}\r\n                    {/* <Route exact path='/reportview'>\r\n                        <ReportView />\r\n                    </Route> */}\r\n\r\n                    {/* Route for the ISI Management page */}\r\n                    <Route exact path='/isimenu'>\r\n                        <ISIMenu />\r\n                    </Route>\r\n\r\n                    {/* Route for the ISI Manage page */}\r\n                    <Route exact path='/isimanage'>\r\n                        <ISIManage />\r\n                    </Route>\r\n\r\n                    {/* Route for the ISI Receive page */}\r\n                    <Route exact path='/isireceive'>\r\n                        <ISIReceive />\r\n                    </Route>\r\n\r\n                    {/* Route for the ISI Report page */}\r\n                    <Route exact path='/isireport'>\r\n                        <ISIReport />\r\n                    </Route>\r\n\r\n                    {/* Route for the ISI Sign Out page */}\r\n                    <Route exact path='/isisignout'>\r\n                        <ISISignOut />\r\n                    </Route>\r\n\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}